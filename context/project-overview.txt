# DEXMT Project Context

## Architecture Overview
DEXMT is a decentralized exchange mirror trading platform built with:
- **Backend**: Hono.js (TypeScript) + PostgreSQL database
- **Frontend**: Vanilla TypeScript + Modern CSS  
- **Blockchain**: GMX SDK integration for decentralized trading
- **DevOps**: Docker containerization with hot reloading
- **Authentication**: MetaMask wallet integration with signature verification

## Project Structure
DEXMT-Docker/
â”œâ”€â”€ hono/                    # Main application directory
â”‚   â”œâ”€â”€ src/                 # TypeScript source code
â”‚   â”‚   â”œâ”€â”€ api/            # API endpoints (traders, wallet)
â”‚   â”‚   â”œâ”€â”€ database.tsx    # Database operations (Kysely ORM)
â”‚   â”‚   â”œâ”€â”€ gmxsdk.tsx      # GMX SDK integration
â”‚   â”‚   â”œâ”€â”€ scheduler.tsx   # Background tasks (position updates, trade mirroring)
â”‚   â”‚   â”œâ”€â”€ types/          # TypeScript type definitions
â”‚   â”‚   â”œâ”€â”€ utils/          # Utility functions
â”‚   â”‚   â””â”€â”€ logs/           # **LOG FILES LOCATION** ðŸ“‹
â”‚   â”œâ”€â”€ static/             # Frontend assets
â”‚   â”‚   â””â”€â”€ ts-front-end/   # Frontend TypeScript code
â”‚   â”œâ”€â”€ tests/              # Test suites
â”‚   â”‚   â”œâ”€â”€ unit/           # Unit tests
â”‚   â”‚   â”œâ”€â”€ integration/    # Integration tests
â”‚   â”‚   â””â”€â”€ e2e/            # End-to-end tests (Playwright)
â”‚   â””â”€â”€ package.json        # Dependencies and scripts
â”œâ”€â”€ bash-scripts/           # Utility scripts
â””â”€â”€ compose.yaml            # Docker configuration

## Important NPM Commands (run from /hono directory)

### Development
- npm run dev - Start development server with hot reloading
- npm run compile:backend - Check TypeScript compilation (useful for error checking)

### Testing
- npm test or npm run test:unit - Run unit tests only (fast, no Docker)
- npm run test:integration - Run integration tests with Docker
- npm run test:e2e - Run end-to-end tests (Playwright)
- npm run test:all - Run complete test suite via bash script
- npm run test:all:quick - Quick test run (assumes server running)

### Docker Operations
- docker compose up -d - Start main services (port 8787)
- docker compose -f docker-compose.test.yml up -d - Start test environment (port 8788)

## Log Files Location ðŸ“‹
**Critical for debugging**: Log files are located at /hono/src/logs/
- server-[date].log - Main server logs
- address/[wallet_address].log - Per-trader specific logs

When debugging issues, always check these log files first!

## Database
- **Main DB**: PostgreSQL on port 5432 (database: dexmt)
- **Test DB**: PostgreSQL on port 5433 (database: dexmt_test)
- **Access script**: bash-scripts/open_db.sh - Opens PostgreSQL CLI

## Key Files to Know
- src/database.tsx - All database operations using Kysely ORM
- src/api/traders.tsx - Main trader API endpoints
- src/gmxsdk.tsx - GMX blockchain integration
- src/scheduler.tsx - Background position updates and trade mirroring
- tests/helpers/test-utils.ts - Testing utilities for integration tests

## URLs
- Main app: http://localhost:8787
- Test app: http://localhost:8788
- Health check: http://localhost:8787/health